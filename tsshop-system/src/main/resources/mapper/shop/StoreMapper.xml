<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.shop.mapper.StoreMapper">
    
    <resultMap type="Store" id="StoreResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="banner"    column="banner"    />
        <result property="avatar"    column="avatar"    />
        <result property="shelves"    column="shelves"    />
        <result property="deleted"    column="deleted"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectStoreVo">
        select id, name, banner, avatar, shelves, deleted, create_time, update_time from store
    </sql>

    <select id="selectStoreList" parameterType="Store" resultMap="StoreResult">
        <include refid="selectStoreVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="banner != null  and banner != ''"> and banner = #{banner}</if>
            <if test="avatar != null  and avatar != ''"> and avatar = #{avatar}</if>
            <if test="shelves != null "> and shelves = #{shelves}</if>
            <if test="deleted != null "> and deleted = #{deleted}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and create_time between #{params.beginCreateTime} and #{params.endCreateTime}</if>
            <if test="params.beginUpdateTime != null and params.beginUpdateTime != '' and params.endUpdateTime != null and params.endUpdateTime != ''"> and update_time between #{params.beginUpdateTime} and #{params.endUpdateTime}</if>
        </where>
    </select>
    
    <select id="selectStoreById" parameterType="Long" resultMap="StoreResult">
        <include refid="selectStoreVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertStore" parameterType="Store" useGeneratedKeys="true" keyProperty="id">
        insert into store
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="banner != null and banner != ''">banner,</if>
            <if test="avatar != null and avatar != ''">avatar,</if>
            <if test="shelves != null">shelves,</if>
            <if test="deleted != null">deleted,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="banner != null and banner != ''">#{banner},</if>
            <if test="avatar != null and avatar != ''">#{avatar},</if>
            <if test="shelves != null">#{shelves},</if>
            <if test="deleted != null">#{deleted},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateStore" parameterType="Store">
        update store
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="banner != null and banner != ''">banner = #{banner},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="shelves != null">shelves = #{shelves},</if>
            <if test="deleted != null">deleted = #{deleted},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteStoreById" parameterType="Long">
        delete from store where id = #{id}
    </delete>

    <delete id="deleteStoreByIds" parameterType="String">
        delete from store where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>